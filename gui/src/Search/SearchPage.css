
.list_title {
    position: relative;
    z-index: 200;
    color: aliceblue;
    text-align: center;
}

.searchImg{
    position: relative;
    width: 5%;
    height: auto;
}

.containerSearch{
    position: relative;
    z-index: 100;
    width: 30%;
    transform: translate(100%, -35%);
  }
  
  .containerSearch h1 {
    width: 100%;
    height: auto;
  }
  
  .containerSearch img {
    position: absolute;
    top: 50%;
    width: 28%;
    height: auto;
    transform: translate(320%, -50%);
  }

  * {
	border: 0;
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

.searchRoot {
	--bg: #e3e4e8;
	--fg: #f5f7fd;
	--input: #ffffff;
	--primary: #255ff4;
	--dur: 1s;
}
body, input {
	color: var(--fg);
	font: 1em/1.5 Hind, sans-serif;
}

form, input, .caret {
	margin: auto;
}
form {
	position: relative;
	width: 100%;
	max-width: 17em;
    transform: translate(-10%, 0%);
    padding-bottom: 2%;
    padding-top: 1%;
}
input, .caret {
	display: block;
	transition: all calc(var(--dur) * 0.5) linear;
}
input {
	background: transparent;
	border-radius: 50%;
	box-shadow: 0 0 0 0.25em inset;
	caret-color: var(--primary);
	width: 2em;
	height: 2em;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
}
input:focus, input:valid {
	background: var(--input);
	border-radius: 0.25em;
	box-shadow: none;
	padding: 0.75em 1em;
	transition-duration: calc(var(--dur) * 0.25);
	transition-delay: calc(var(--dur) * 0.25);
	width: 100%;
	height: 3em;
}
input:focus {
	animation: showCaret var(--dur) steps(1);
	outline: transparent;
}
input:focus + .caret, input:valid + .caret {
	animation: handleToCaret var(--dur) linear;
	background: transparent;
	width: 1px;
	height: 1.5em;
	transform: translate(0,-1em) rotate(-180deg) translate(7.5em,-0.25em);
}
input::-webkit-search-decoration {
	-webkit-appearance: none;
}
label {
	color: #e3e4e8;
	overflow: hidden;
	position: absolute;
	width: 0;
	height: 0;
}
.caret {
	color: #e3e4e8;
	background: currentColor;
	border-radius: 0 0 0.125em 0.125em;
	margin-bottom: -0.6em;
	width: 0.25em;
	height: 1em;
	transform: translate(0,-1em) rotate(-45deg) translate(0,0.875em);
	transform-origin: 50% 0;
}

@keyframes showCaret {
	from {
		caret-color: transparent;
	}
	to {
		caret-color: var(--primary);
	}
}
@keyframes handleToCaret {
	from {
		background: currentColor;
		width: 0.25em;
		height: 1em;
		transform: translate(0,-1em) rotate(-45deg) translate(0,0.875em);
	}
	25% {
		background: currentColor;
		width: 0.25em;
		height: 1em;
		transform: translate(0,-1em) rotate(-180deg) translate(0,0.875em);
	}
	50%, 62.5% {
		background: var(--primary);
		width: 1px;
		height: 1.5em;
		transform: translate(0,-1em) rotate(-180deg) translate(7.5em,2.5em);
	}
	75%, 99% {
		background: var(--primary);
		width: 1px;
		height: 1.5em;
		transform: translate(0,-1em) rotate(-180deg) translate(7.5em,-0.25em);
	}
	87.5% {
		background: var(--primary);
		width: 1px;
		height: 1.5em;
		transform: translate(0,-1em) rotate(-180deg) translate(7.5em,0.125em);
	}
	to {
		background: transparent;
		width: 1px;
		height: 1.5em;
		transform: translate(0,-1em) rotate(-180deg) translate(7.5em,-0.25em);
	}
}

button.filter {
	position: absolute;
	width: 220px;
	transform: translate(200%, -60%);
}

/* .filter {
	position: relative;
	width: 200px;
	transform: translate(200%, -30%);
	z-index: -1 !important;
} */

#firstCheckboxStretched { /*TRY USING ONLY DROPDOWN AND CHANGE AFTER TO CHECKBOX*/
	width: 1px;
	float: left;
}

#firstCheckboxStretched1 {
	position: relative;
	width: 8px;
	float: left;
	z-index: -1 !important;
}